<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="../static/css/detail.css" />
    <link rel="stylesheet" href="../static/css/footer.css" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>상세페이지</title>
  </head>
  <body>
    <header>
      <%- include('./header') %>
    </header>
    <!------------------------------------------------- grid row1 start ------------------------------------------->
    <div class="gridRow1 container">
      <h1>이 영화 한줄평</h1>

      <div class="userReviews">
        <% for (let i = 0; i < Math.min(comments.length, 5); i++) { %>
        <div class="userReview">
          <span class="heart-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill_01" viewBox="0 0 16 16" onclick="commentLike()">
              <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314" />
            </svg>
          </span>
          <span class="description"><%= comments[i].description %></span>
          <span class="rate">평점: <%= comments[i].rate %>/5</span>
        </div>
        <% } %>
      </div>



      <!-- 리뷰 작성 폼 -->
      <div class="starRate">
        <form class="mb-3" name="myform" id="myform" method="post">
          <!-- 별점 남기기 -->
          <fieldset>
            <span class="text-bold">평점을 선택해주세요</span>
            <input type="radio" name="reviewStar" value="5" id="rate1" /><label for="rate1" onclick="saveRating(5)">★</label>
            <input type="radio" name="reviewStar" value="4" id="rate2" /><label for="rate2" onclick="saveRating(4)">★</label>
            <input type="radio" name="reviewStar" value="3" id="rate3" /><label for="rate3" onclick="saveRating(3)">★</label>
            <input type="radio" name="reviewStar" value="2" id="rate4" /><label for="rate4" onclick="saveRating(2)">★</label>
            <input type="radio" name="reviewStar" value="1" id="rate5" /><label for="rate5" onclick="saveRating(1)">★</label>
          </fieldset>
        </form>
      </div>
      <form class="myReview">
        <input type="text" class="writeReview" id="userReview" placeholder="리뷰를 작성해보세요" onkeypress="handleKeyPress(event)" />
        <button type="button" class="submitReview" onclick="submitReview(movieIdx)">리뷰작성</button>
      </form>
    </div>
    </div>
    <!--------------------------------- grid row1 end / row2 start ------------------------------------------->
    <div class="gridRow2 container">
      <div class="poster" id="poster_path"></div>
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16" onclick="movieLike()">
        <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314" />
      </svg>
      <div class="movieDetail1">
        <div class="movieName MD" id="title"></div>
        <div class="movieGenre MD" id="genre"></div>
      </div>
      <div class="movieDetail2">
        <div class="movieRelease_date MD" id="release_date"></div>
      </div>
      <div class="summaries">
        <div class="movieOverview" id="overview"></div>
      </div>
    </div>
    <!--------------------------------- grid row2 end / row3 start ------------------------------------------->
    <div class="gridRow3 container">
      <div class="alikeMovies">
        <div class="alikeMovieMsg">이 영화와 비슷한 영화</div>
        <% if (similarMovies.length > 0) { %>
        <% for (let i = 0; i < Math.min(similarMovies.length, 3); i++) { %>
        <div class="alikeMovie alikeMovie<%= i + 1 %>">
          <img src="https://image.tmdb.org/t/p/w154<%= similarMovies[i].poster_path %>" onclick="move('<%= similarMovies[i].movieidx %>')" alt="<%= similarMovies[i].title %> Poster">
          <div class="alikeMovieTitle"><%= similarMovies[i].title %></div>
        </div>
        <% } %>
        <% } else { %>
        <p>비슷한 장르의 영화를 불러오지 못했습니다.</p>
        <% } %>
      </div>
    </div>
    <footer>
      <div class="footer">
        <strong>주식회사</strong> 무비캐스터 <strong>대표</strong> 4FLEX 서울특별시 용산구 청파로
        109(나진전자월드상가) 3층 <br />
        <strong>사업자 등록 번호</strong> 595-95-0099 <br />
        © 2023 by MovieCaster, Inc. All rights reserved. <br />
      </div>
    </footer>
    <!--------------------------- 리뷰 작성--------------------- -->
    <script>
      const movieIdx = getMovieIdxFromURL();


      function getMovieIdxFromURL() {
        const url = window.location.href;
        const lastSlashIndex = url.lastIndexOf('/');
        const movieIdx = url.substring(lastSlashIndex + 1);
        console.log('현재 movieIdx: ', movieIdx)
        return movieIdx;
      }

      function saveRating(rating) {
        window.rating = rating;
        console.log('선택한 평점: ', rating)
        console.log('접속중인 유저 인덱스:', "<%= useridx %>")
      }

      function submitReview(movieIdx) {
        const isLoggedIn = <%= isLoggedIn %>;

        if (!isLoggedIn) {
          alert('로그인을 먼저 해주세요.');
          return; // 로그인이 안 되어있으면 함수를 여기서 종료
        }

        const reviewText = document.getElementById('userReview').value;
        const rating = window.rating;

        const reviewData = {
          rating: rating,
          description: reviewText,
        };
        console.log(reviewData)

        axios({
            method: 'post',
            url: `/detail/${movieIdx}`,
            data: reviewData,
          })
          .then((response) => {
            console.log('리뷰가 성공적으로 제출되었습니다:', response.data);

            const newReview = response.data;
            const newReviewData = response.data.newReview;
            const rate = newReviewData.rate;
            const description = newReviewData.description;
            console.log('axios rate: ', rate)
            console.log('axios desc: ', description)


            const userReviewsContainer = document.querySelector('.userReviews');
            const userReviews = document.querySelectorAll('.userReview');

            const newReviewHTML = `
              <div class="userReview new-review">
              <span class="description">${description}</span>
              <span class="rate">평점: ${rate}/5</span>
              </div>
              `;

            userReviewsContainer.insertAdjacentHTML('afterbegin', newReviewHTML);

            if (userReviews.length >= 5) {
              const lastReview = userReviews[userReviews.length - 1];
              lastReview.classList.add('old-review');
              lastReview.remove();
            }
          })
          .catch((error) => {
            console.error('리뷰 제출 중 오류 발생:', error);
          });
      }

      document.addEventListener('DOMContentLoaded', () => {
        const movieInfo = <%- JSON.stringify(movieInfo) %>;

        updateMovieInfo(movieInfo);
      });

      function updateMovieInfo(movieInfo) {
        document.getElementById('poster_path').innerHTML = `<img src="https://image.tmdb.org/t/p/w154${movieInfo.poster_path}"  alt="Movie Poster">`;
        document.getElementById('title').innerHTML = `<strong>제목: </strong> ${movieInfo.title}`;
        document.getElementById('genre').innerHTML = `<strong>장르: </strong> ${movieInfo.genre}`;
        document.getElementById('release_date').innerHTML = `<strong>개봉일: </strong> ${movieInfo.release_date}`;
        document.getElementById('overview').innerHTML = `<strong>줄거리: </strong> ${movieInfo.overview}`;
      }
    </script>
    <!-- 새로운 상세페이지 이동 -->
    <script>
      function move(movieIdx) {
        const detailPageURL = `/detail/${movieIdx}`;
        console.log('selectedMovieIdx: ', movieIdx)
        window.location.href = detailPageURL;
      }
    </script>
    <script>
      const alikeMovieImgs = document.querySelectorAll('.alikeMovie img');
      const alikeMovieTitles = document.querySelectorAll('.alikeMovieTitle');

      alikeMovieImgs.forEach(img => {
        img.addEventListener('mouseenter', () => {
          img.style.transform = 'scale(1.2)';
          img.style.zIndex = '999';
          img.nextElementSibling.style.fontWeight = '600';
          img.nextElementSibling.style.transform = 'translateY(30px)';
          img.style.cursor = 'grab';
        });

        img.addEventListener('mouseleave', () => {
          img.style.transform = 'none';
          img.style.zIndex = '1';
          img.nextElementSibling.style.fontWeight = '400';
          img.nextElementSibling.style.transform = 'none';
          img.style.cursor = 'default';
        });
      });
    </script>
    <script>
      function movieLike() {
        const isLoggedIn = <%= isLoggedIn %>;

        if (!isLoggedIn) {
          alert('로그인을 먼저 해주세요.');
          return; // 로그인이 안 되어있으면 함수를 여기서 종료
        }
        axios.post(`/detail/${movieIdx}/movieLike`, {
            movieIdx: movieIdx,
            useridx: "<%= useridx %>"
          })
          .then((response) => {
            // 성공적으로 저장됐을 때 처리할 코드
            console.log('데이터 저장 성공:', response.data);

            // 서버 응답에 따라 하트 아이콘 클래스 변경
            const heartIcon = document.querySelector('.bi-heart-fill');
            const likeIcon = document.querySelector('.bi-heart-fill_like');
            if (response.data.message.includes('추가')) {
              // 좋아요 추가된 경우
              heartIcon.classList.remove('bi-heart-fill');
              heartIcon.classList.add('bi-heart-fill_like');
            } else if (response.data.message.includes('삭제')) {
              // 좋아요 삭제된 경우
              likeIcon.classList.remove('bi-heart-fill_like');
              likeIcon.classList.add('bi-heart-fill');
            }
          })
          .catch((error) => {
            // 오류 발생 시 처리할 코드
            console.error('데이터 저장 오류:', error);
          });
      }
    </script>
    <script>
      function handleKeyPress(event) {
        const keycode = event.keyCode ? event.keyCode : event.which;
        if (keycode === 13) {
          event.preventDefault(); // 엔터키의 기본 동작(새 줄 추가)을 막음
          submitReview(movieIdx);
        }
      }
    </script>


  </body>
</html>