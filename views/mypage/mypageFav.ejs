<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Noto+Sans+KR&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/static/css/index.css" />
    <link rel="stylesheet" href="../static/css/search.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>인생영화 등록</title>
    <style>
        /* 버튼 스타일 */
        .confirm-button {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            color: #fff;
            background-color: #007bff;
            border: 1px solid #007bff;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .confirm-button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="search-container">
        <section class="search__section">
            <div class="search__body">
                <input type="text" name="search" class="search-body__input" id="search" placeholder="검색할 영화를 입력하세요." />
                <i class="fa-solid fa-magnifying-glass regular-icon search-icon" onclick="searchResult()"></i>
            </div>
                <a href="/mypage"><i class="fa-solid fa-xmark regular-icon close-icon"></i></a>
        </section>
    
        <section class="search-result__section hidden">
            <h2 class="search-result__count"></h2>

            <div class="search-result__list">
                <div class="search-result"></div>
                <% for (let i = 0; i < 1; i++) { %>
                    <div class="search-result__body">
                        <div class="search-result__info">
                            <div class="search-result__poster">
                                <img src="" alt="" />
                            </div>
                            <h3 class="search-result__title"></h3>
                            <a href="#" class="confirm-button" onclick="saveMovie">확인</a>
                        </div>
                    </div>
                <% } %>
        </section>
    </div>

    <script>
        const posterUrl = `https://image.tmdb.org/t/p/w200`;
        
        const searchInput = document.querySelector('.search-body__input');
        const searchCount = document.querySelector('.search-result__count');
        const resultTitle = document.querySelectorAll('.search-result__title');
        const resultPosterBody = document.querySelectorAll('.search-result__poster');
        const resultPoster = document.querySelectorAll('.search-result__poster img');
        const failResult = document.querySelector('.search-result');

        // 초기화 설정
        function onSearch() {
            // 카운트 초기화
            searchCount.innerHTML = '';

            // 타이틀 초기화
            const resultTitleArr = Array.from(resultTitle);
            for (const title of resultTitleArr) {
                title.innerHTML = '';
            }

            // 포스터 초기화
            for (const poster of resultPoster) {
                poster.src = '';
        }}

        // 검색 결과
        function searchResult() {
            // 결과 초기화
            onSearch();

            document.querySelector('.search-result__section').classList.remove('hidden');

            axios({
                method: 'get',
                url: '/search/result',
                params: {input: searchInput.value}
            }).then((res) => {
                const result = res.data;
                console.log(result);

                for(let i=0; i<result.movie.length; i++) {
                    if (result.movie.length > 0 && result.movie[i].count) {
                        // 결과 초기화
                        failResult.textContent = '';

                        // 결과 개수
                        const movie = result.movie[i];
                        searchCount.innerHTML = 
                            `<span style="color: var(--blue-point-color);">검색 결과</span>
                            ${movie.count}<span style="color: var(--blue-point-color);">개</span>`;

                        // 결과 title
                        resultTitle[i].textContent = `${movie.title}`;

                        // 결과 img(poster)
                        const url = movie.poster;
                        if (url) {
                            resultPoster[i].src = `${posterUrl}${url}`;
                        } else {
                            // resultPosterBody[i].textContent = '정보 없음';
                            resultPosterBody[i].style.backgroundColor = 'rgba(0, 0, 0, 0.1)';
                        }
                        
                    } else {
                        failResult.textContent = result.movie[i].msg;
                    }
                }
            })
        }

        // 태그 공통 부분
        function handleTagSearch(url) {
            // 결과 초기화
            onSearch();
            failResult.textContent = '';

            document.querySelector('.search-result__section').classList.remove('hidden');

            // 배경색 초기화
            resetBgColor();

            axios({
                method: 'get',
                url: url,
            }).then(result => {
                const res = result.data;

                if (res.data) {
                    for (let i = 0; i < res.data.length; i++) {
                        // 결과 title
                        resultTitle[i].textContent = res.data[i].title;

                        // 결과 img(poster)
                        const url = res.data[i].poster_path
                        const resultPoster = document.querySelectorAll('.search-result__poster img');
                        resultPoster[i].src = `${posterUrl}${url}`;
                    }
                }
            });
        }

        // 배경색 초기화 : 검색 결과 있음 -> 태그 클릭 영향 상쇄
        function resetBgColor() {
            for (const poster of resultPosterBody) {
                poster.style.backgroundColor = '';
            }
        }


        // 확인 버튼을 눌렀을 때 호출되는 함수
        function saveMovieToDatabase(title) {
        // Axios를 사용하여 서버에 POST 요청을 보냄
        axios({
            method: 'post',
            url: '/search/saveMovie',
            data: { title: title }  // 저장할 영화의 제목을 서버에 전달
        })
        .then((response) => {
            console.log('영화가 성공적으로 저장되었습니다:', response.data);
            // 저장 성공 시 사용자에게 메시지 또는 다른 동작 수행
        })
        .catch((error) => {
            console.error('영화 저장 중 오류 발생:', error);
            // 오류 처리
        });
    }

    </script>
</body>
</html>