<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/static/css/signup.css" />
    <title>회원가입</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <div class="body">
      <div class="containerMain">
        <div class="logoBox"><img class="logoImg" src="../static/img/logo.png" onclick="goToMain()"></div>
        <div class="signupMsgBox">
          <h2>회원가입</h2>
          <h4>회원가입을 위해 정보를 입력해 주세요.</h4>
        </div>
        <form class="userForm" name="register">
          <div class="containerSub">
            <div class="idBox innerBox">
              <div class="idBoxR boxR">
                <!-- 아이디 -->
                <!-- 숫자+영문 대소문자 최소6/최대15 -->
                <input type="text" name="userid" id="userid" required placeholder="아이디 입력" oninput="validCheckId(this)" onfocus="showValidationInfoId('숫자,영문,대소문자/ 최소5자~최대10자')" />
                <!-- pattern="^[a-zA-Z0-9]+$"////// -->
                <!-- minlength="6" maxlength="15"  -->
                <div class="idValidMsg hide validMsg">사용 가능한 아이디 입니다.</div>
                <div class="idInvalidMsg hide invalidMsg">사용 불가능한 아이디 입니다.</div>
                <div class="validationMessageId validationMessage" id="validationMessageId"></div>
              </div>
            </div>
            <div class="pwBox innerBox">
              <div class="pwBoxR boxR">
                <!-- 비밀번호 -->
                <!-- 최소8/최대16 숫자,영문,특수문자 각 1개 이상 -->
                <input type="password" id="pw" name="pw" required placeholder="비밀번호" oninput="validCheckPw(this)" onfocus="showValidationInfoPw('숫자,영문,특수문자 각 1개 이상/ 최소8자~최대16자 ')" />
                <!-- pattern=" ^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$" -->
                <div class="pwValidMsg hide validMsg">사용 가능한 비밀번호 입니다.</div>
                <div class="pwInvalidMsg hide invalidMsg">사용 불가능한 비밀번호 입니다.</div>
                <div class="validationMessagePw validationMessage" id="validationMessagePw"></div>
              </div>
            </div>
            <div class="pwCheckBox innerBox">
              <div class="pwCheckBoxR boxR">
                <!-- 비밀번호 확인 -->
                <!-- 위의 pw와 일치하는지만 -->
                <input type="password" id="pwRetype" placeholder="비밀번호 확인 " oninput="validCheckPwRetype(this)" />
                <div class="pwRetypeValidMsg hide validMsg">비밀번호가 일치합니다.</div>
                <div class="pwRetypeInvalidMsg hide invalidMsg">비밀번호가 일치하지 않습니다.</div>
              </div>
            </div>
            <div class="emailBox innerBox">
              <div class="emailBoxR boxR">
                <!-- 이메일 -->
                <!-- email 형식 자동포함 -->
                <input type="email" name="email" id="email" required placeholder="이메일" oninput="validCheckEmail(this)" />
                <div class="emailValidMsg hide validMsg">사용 가능한 이메일 입니다.</div>
                <div class="emailInvalidMsg hide invalidMsg">유효하지 않은 이메일 입니다.</div>
              </div>
            </div>
            <div class="nicknameBox innerBox">
              <div class="nicknameBoxR boxR">
                <!-- 닉네임 -->
                <!-- 한글 최소2 최대 5 -->
                <input type="text" name="nickname" id="nickname" required placeholder="닉네임" oninput="validCheckNickname(this)" onfocus="showValidationInfoNickname('한글만 입력/ 최소2자~최대5자')" />
                <!-- pattern="^[가-힣]+$" minlength="3" maxlength="5"  -->
                <div class="nicknameValidMsg hide validMsg">사용 가능한 닉네임 입니다.</div>
                <div class="nicknameInvalidMsg hide invalidMsg">사용 불가능한 닉네임 입니다.</div>
                <div class="validationMessageNickname validationMessage" id="validationMessageNickname"></div>
              </div>
            </div>
          </div>
          <br />
          <button class="buttonSubmit" type="button" onclick="userSignUp()">회원가입</button>
        </form>
      </div>
    </div>
    <div class="footerBox">
      <footer>
        <div class="footer">
          <strong>주식회사</strong> 무비캐스터 <strong>대표</strong> 4FLEX 서울특별시 용산구 청파로
          109(나진전자월드상가) 3층 <br />
          <strong>사업자 등록 번호</strong> 595-95-0099 <br />
          © 2023 by MovieCaster, Inc. All rights reserved. <br />
        </div>
      </footer>
    </div>
    <script>
      const form = document.querySelector('.userForm');

      const userId = document.querySelector('#userid');
      const userPw = document.querySelector('#pw');
      const userPwRetype = document.querySelector('#pwRetype');
      const userEmail = document.querySelector('#email');
      const userNickname = document.querySelector('#nickname');

      const checkIdValidity = form.checkValidity(userId);
      const checkPwValidity = form.checkValidity(userPw);
      const checkEmailValidity = form.checkValidity(userEmail);
      const checkNicknameValidity = form.checkValidity(userNickname);

      function validCheckId(e) {
        const regexId = /^[a-zA-Z0-9]{5,10}$/;
        const valueId = e.value;
        if (regexId.test(valueId)) {
          document.querySelector('.idValidMsg').classList.remove('hide');
          document.querySelector('.idInvalidMsg').classList.add('hide');
        } else {
          document.querySelector('.idInvalidMsg').classList.remove('hide');
          document.querySelector('.idValidMsg').classList.add('hide');
        }
      }

      function validCheckPw(e) {
        const regexPw = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$/;
        const valuePw = e.value;
        if (regexPw.test(valuePw)) {
          document.querySelector('.pwValidMsg').classList.remove('hide');
          document.querySelector('.pwInvalidMsg').classList.add('hide');
        } else {
          document.querySelector('.pwInvalidMsg').classList.remove('hide');
          document.querySelector('.pwValidMsg').classList.add('hide');
        }
      }

      function validCheckPwRetype(e) {
        const valuePwRetype = e.value;
        const valuePw = document.getElementById('pw').value;
        if (valuePwRetype == valuePw) {
          document.querySelector('.pwRetypeValidMsg').classList.remove('hide');
          document.querySelector('.pwRetypeInvalidMsg').classList.add('hide');
        } else {
          document.querySelector('.pwRetypeInvalidMsg').classList.remove('hide');
          document.querySelector('.pwRetypeValidMsg').classList.add('hide');
        }
      }

      function validCheckEmail(e) {
        const regexEmail = /^[a-zA-Z0-9+-\_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/;
        const valueEmail = e.value;
        if (regexEmail.test(valueEmail)) {
          document.querySelector('.emailValidMsg').classList.remove('hide');
          document.querySelector('.emailInvalidMsg').classList.add('hide');
        } else {
          document.querySelector('.emailInvalidMsg').classList.remove('hide');
          document.querySelector('.emailValidMsg').classList.add('hide');
        }
      }

      function validCheckNickname(e) {
        const regexNickname = /^[가-힣]{2,5}$/;
        const valueNickname = e.value;
        if (regexNickname.test(valueNickname)) {
          document.querySelector('.nicknameValidMsg').classList.remove('hide');
          document.querySelector('.nicknameInvalidMsg').classList.add('hide');
        } else {
          document.querySelector('.nicknameInvalidMsg').classList.remove('hide');
          document.querySelector('.nicknameValidMsg').classList.add('hide');
        }
      }

      function userSignUp() {
        const form = document.forms['register'];
        const data = {
          userid: form.userid.value,
          pw: form.pw.value,
          email: form.email.value,
          nickname: form.nickname.value,
        };
        axios({
          method: 'post',
          url: '/signup',
          data: data,
        }).then((res) => {
          const result = res.data;
          alert('회원가입에 성공하였습니다!');
          document.location.href = '/signin';
          console.log('res data result', result);
        });
      }

      function goToMain() {
        location.href = '/';
      }

      function showValidationInfoId(message) {
        const validationMessage = document.getElementById('validationMessageId');
        validationMessage.textContent = message;
        validationMessage.style.display = 'block';
      }

      function showValidationInfoPw(message) {
        const validationMessage = document.getElementById('validationMessagePw');
        validationMessage.textContent = message;
        validationMessage.style.display = 'block';
      }

      function showValidationInfoNickname(message) {
        const validationMessage = document.getElementById('validationMessageNickname');
        validationMessage.textContent = message;
        validationMessage.style.display = 'block';
      }

      const inputs = document.querySelectorAll('.innerBox input');
      inputs.forEach(input => {
        input.addEventListener('blur', function() {
          const validationMessage = input.parentElement.querySelector('#validationMessageId, #validationMessagePw, #validationMessageNickname');
          validationMessage.textContent = '';
          validationMessage.style.display = 'none';
        });
      });
    </script>
  </body>
</html>